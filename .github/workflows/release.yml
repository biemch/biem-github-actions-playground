name: Release

on:
  push:
    tags:
      - '*'

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          scope: '@octocat'
      - name: Install dependencies
        run: yarn install
      - name: Run linting
        run: yarn lint

  build:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          scope: '@octocat'
      - name: Install dependencies
        run: yarn
      - name: Build project
        run: yarn build
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist/

  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install conventional-changelog-cli
        run: npm install -g conventional-changelog-cli

      - name: Generate release notes
        run: conventional-changelog -p angular -r 2 > RELEASE_NOTES.md

      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if ! gh release view v${{ github.ref_name }} &>/dev/null; then
            gh release create v${{ github.ref_name }} \
              --title "v${{ github.ref_name }}" \
              --notes-file RELEASE_NOTES.md
          else
            echo "Release v${{ github.ref_name }} already exists"
          fi

  upload-assets:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs: create-release
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist/

      - name: Prepare release files
        run: |
          mkdir release
          cp -r dist release/
          cp CHANGELOG.md release/
          cp LICENSE.md release/
          cp README.md release/
          cp package.json release/

      - name: Create release archives
        run: |
          cd release
          zip -r ../v${{ github.ref_name }}.zip .
          tar -czf ../v${{ github.ref_name }}.tar.gz .

      - name: Upload release archives
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload v${{ github.ref_name }} v${{ github.ref_name }}.zip --clobber
          gh release upload v${{ github.ref_name }} v${{ github.ref_name }}.tar.gz --clobber
